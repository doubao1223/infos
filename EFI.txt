

2019年 02月 27日 星期三 14:48:31 CST

= FEI (Extensible Firmware Interface)
   => Processor type and features
   CONFIG_EFI
     This enabEles the kernel to use EFI runtime services that are available
	 (such as the EFI variable services)

     This options is only useful on systems that have EFI firmware.

     In addition, you should use the latest ELILO loader available at
     <http://elilo.sourceforge.net> in order to take advantage of EFI
	 runtime services.

	 However, even with this option, the resultant kernel should continue
	 to boot on non-EFI platforms.
	 
  CONFIG_EFI_STUB
     This kernel feature allows a bzImage to be loaded directly by EFI
	 firmware without the use of bootloader.

	 see Documentation/efi-stub.txt for more information.

  CONFIG_EFI_MIXED
     Enabling this feature allows a 64-bit kernel to be booted on a
	 32-bit firmware, provided that your CPU supports 64-bit mode.

	 Note that it is not possible to boot a mixed-mode enabled kernel
	 via the EFI boot stub - a bootloader that supports
	 the EFI handover protocol must be used.

  => Firmware Drivers
       EFI Support
	      EFI Bootloader Control
  CONFIG_EFI_VARS
     If you say Y here, you are able to get EFI variable information via
	 sysfs.  You may read, write, create, and destory EFI variables through
	 this interface.

	 Note that using this driver n concert efibootmgr requries at least
	 test release version 0.5.0-test3 or later, which is available from:
	 <http://linux.dell.com/efibootmgr/testing/efibootmgr-0.5.0-test3.tar.gz>

	 Subsequent efibootmgr releases may be found at:
	 <http://github.com/vathpela/efibootmgr?
	 
  CONFIG_EFI_BOOTLOADER_CONTROL
     
== block
    sudo blkid | grep sda2
	=>
	sda1  cafec
	sda2  9fe59
	sda3  72797
    问题：
		正在BOOT的是 root=UUID=26e7d0d0-2aee-4330-8948-552240a6b8ab
		initrd		 /boot/initrd.img-4.15.0-19-generic

		initrd       /boot/initrd.img-4.14.89-xenomai-3.0.8
		
	lsblk /dev/sda	
	sudo fdisk -l /dev/sda
	sudo sfdisk -l /dev/sda

	sudo fdisk -l | grep '^Disk /dev'

== https://askubuntu.com/questions/510856/how-to-boot-load-the-kernel-using-efi-stub-efistub-loader
    1. Mount the efi partition and copy the kernel files there
	$ cp -uv /boot/vmlinuz-* /boot/initrd.img-* /boot/efi/EFI/ubuntu/
	
        '/boot/vmlinuz-3.13.0-35-generic' -> '/boot/efi/EFI/ubuntu/vmlinuz-3.13.0-35-generic'
        '/boot/initrd.img-3.13.0-35-generic' -> '/boot/efi/EFI/ubuntu/initrd.img-3.13.0-35-generic'

   2. Change the kernel file name
    $ for f in /boot/efi/EFI/ubuntu/vmlinuz-*-generic;
      do mv -uv -- "$f" "${f//-generic/}.efi";
      done
        '/boot/efi/EFI/ubuntu/vmlinuz-3.13.0-35-generic' -> '/boot/efi/EFI/ubuntu/vmlinuz-3.13.0-35-generic.efi'`

   3. Add new entry to EFI boot menu
      $ kv=3.13.0-35;efibootmgr -c -p 3 -L $kv -l \EFI\ubuntu\vmlinuz-$kv.efi -u root=/dev/sda1 initrd=\\EFI\\ubuntu\\initrd.img-$kv-generic ro rootfstype=ext4 debug ignore_loglevel libata.force=dump_id crashkernel=384M-:128M
      $ kv=3.13.0-35;efibootmgr -c -p 3 -L $kv -l \EFI\ubuntu\vmlinuz-$kv.efi -u root=/dev/sda1 initrd=\\EFI\\ubuntu\\initrd.img-$kv-generic ro rootfstype=ext4
