
2019年 1月19日 星期六 18时24分05秒 CST

== Installing Xenomai 3.x ==

== Introduction
Xenomai 3的两种安装方式
    co-kernel, Colbalt
    natively ( over mainline Linux kernels ), Mercury
    
== Installation steps
    kernel space            kernel/
        a bult-in extension of the Linux kernel.
    
    user-space libraries    lib/
        contains the various user-space libraries exported by
            the Xenomai framework to the applications.

== Installing the Cobalt core
-- patch
scripts/prepare-kernel.sh
     --linux=<linux-srctree>
     --ipipe=<ipipe-patch>
     --arch=<target-arch>
-- configuring
     Building a Cobalt/x86 kernel
-- Cobalt kernel parameters
     xenomai.allowed_group=<gid>        None
     xenomai.sysheap_size-<kbytes>      256KB
     xenomai.state=<state>              enabled
     xenomai.clockfreq=<hz-freq>        0 (=calibrated)
     xenomai.timerfreq=<hz-freq>        0 (=calibrated)
     xenomai.smi=<state>                detect
     xenomai.smi_mask=<source-mask>     1 (=global disable)
     
== Building a Cobalt/x86 kernel (32bit)
　　　　Now, let’s say that you really want to build Xenomai for
a Pentium-based x86 32bit platform, using the native host toolchain;
       the typical steps would be as follows:
       
    $ cd $linux_tree
    $ $xenomai_root/scripts/prepare-kernel.sh --arch=i386 \
      --ipipe=ipipe-core-X.Y.Z-x86-NN.patch
    $ make xconfig/gconfig/menuconfig
      配置内核，并使能　Xenomai 相应选项。
　　$ make bzImage modules

== Installing the Xenomai libraries and tools

--Xenomai库
    ./scripts/bootstrap
    ./configure --enable-shared --enable-smp
    测试
    cd /usr/xenomai/bin
    sudo ./latency
    sudo ./clocktest
    
