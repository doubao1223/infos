
2019年 03月 15日 星期五 19:28:24 CST

## https://en.wikipedia.org/wiki/CANopen#References
== CAN ( Controller Area Network )
   	   	 拥有控制器的区域网络

   	   microcontroller <--> devices   ;; 不需要主计算机
	   message-based protocol
	   应用：
			CAN-based multiplex wiring system
	   规范版本
			CAN 2.0, 1991
				CAN 2.0A	;; 11-bit identifier
				CAN 2.0B	;; 29-bit identifier
			ISO 11898-2
			ISO 11898-3
			...
	  缺点
			CAN standard does not include tasks of application layer protocols,
			如： flow control, device addressing, and transportation of data blocks larger than one message,
			  and above all, application data,
			  many impolementations of higher layer protocols were created.

== CANopen ( The standardized embedded network )
     实现了 network layer层和 以上的层

	 a addressing scheme					一个寻址方案
	 
	 several small communication protocols	多个小的通信协议
	     network management		 网絡管理
		 device monitoring		 设备监控
		 communication between nodes	节点之间的通信
	 an application layer 		 		一个应用层
	 a simple transport layer		    一个简单的传输层
	   for message segmentation/desegmentation

== The lower level protocol ( CAN使用的低层协议 )
   	  虽然 设备之间使用别的通信方式(如 EtherCAT), 也能实现 CANopen device profile.
   	  实现 data link 和 physical layers 通常使用的都是 CAN。
== CANopen 协议包含什么内容，什么应该出现在协议中。
	协议规定了
		the basic CANopen device  ;;什么设备能用
		communication profiles	  ;;通信综述. ( 通信质量，通信概述 )

		CiA301		  ;; basic profile
		
		CiA401		  ;; specialized devices for I/O-modules
		CiA402		  ;; specialized devices for motion control.

== 设备模型 ( Device Model )
      每一个 CANopen device 的控制软件都要实现 certain standard features.
      -> 通信单元 (communication unit)
	  -> 状态机 (state machine)
	  	 	状态
			状态迁移
	  -> 对象字典 (object dictionary)
	  	    条目(entry)
				index			对象的位置(16-bit address)
				Object name		对象的类型
				Name   条目名
				Type   变量的类型
				Attribute  条目的读/写权限
				Mandatory/Optional
		    例：
			index	Object name		Name			Type		Attribute M/O
			0x1000	VAR	   			device type		UNSIGNED32	ro		  M
			0x1001	VAR	   			error register	UNSIGNED8	ro		  M				  ...
			0x1008	VAR				manufacturer	Vis-String	const	  O
									device name
	  -> 应用部分 (application part)
	  	 
== 通信 (Communication)
       CAN bus作为 CANopen 的 data link layer
	   	   CAN id 是11-bit
		   bus arbitraction(总线仲裁)	最小 id 先传
		   减小延迟的方法  使用 a low code number
	   CANopen
		   11-bit的CAN id用作通信，称为
		   	  通信对象身份号(CO-IBD, Communication OBject identifier)
	   CANopen frame
	       base frame format(11位id)
		   基础的帧格式
	           11b		1b	4b			0-8B
		       CAN-ID  	RTR	Data length	Data

			   4b function code (分类不同帧)
			   	   NMT, SYNC, EMCY, PDO, SDO...
			   7b CANopen node ID	1-127, 支持共127台设备

                | 
		   0000,0000,0000
		   0000,1000,0000
		   
		   0000,1000,0000
		   
		   0001,1000,0000
		   0010,0000,0000
		   0101,0000,0000
	  通信模型
	      通信结点之间的不同关系
		  master/slave关系	;; 管理型
			  NMT protocol
		  client/server关系	;; 请求服务型
			  SDO protocol
		  producer/consumer	;;
		  	  Heartbeat and Node Guarding protocols.
	  协议
		  NMT protocols
		  	
== Glossary of CANopen terms
     CAN    带控制器的区域网络
	 CiA	CAN in Automation
	 
     PDO handler ( 同步和异步的 RPDO和TPDO )  ;; 处理数据对象
	 	 object for data exchange
		 
	 SDO handler ( expedited, 加速的         ;; 服务数据对象
	 	 		   segmented  
				   block )
		 peer to peer communication with access to
		   the object dictionary of a device.
	 CAN ID	CAN身份号 ( 11-bit CAN message ID )
	 EDS 	电子数据表 ( Electronic Data Sheet )
	 DCF	设备配置文件 ( Device Configuration File ), 修改过的 EDS 文件，多了 node ID 和 baud rate.

	 pp		Profile Position Mode
	 pv		Profile Velocity Mode
	 vi		Velocity Mode
	 hm		Homing Mode
	 ip		Interpolated Position Mode 插入位置模式
	 tq		Profile Torque Mode	  	   力矩模式
	 all    Mandatory for all modes	   
	 
	 ce		Common entries in the object dictionary  通用条目
	 dc		Device Control			  设备控制
	 pc		Position Control Function 位置控制


	
## Implementing CANopen in hardware
   	 Pietro Tosi,
	 Franco Bigongiari,
	 Walter Errico

== 该硬件解决方案(CCIPC)，支持：
    CANopen in charge of managing
        CAN phisical
		data link
		application layers

== Architecture of the CANopen core
		 
	 Network Management
	 Synch consumer
	 Heartbeat consumer and producer

## Cia Draft Standard Proposal 402 ( Device Profile Drives and Motion Control )
   (CAN in Automation)
    拥有控制器的区域网络 在 自动化中的应用

	CANopen device profile		402
			设备   概要
	
	communication techniques 	301

== 访问 驱动器( drive )
     方式： 通过 data objects
	 	PDO,	未经确认的服务，实时，快
				CAN-frame 中的 8 bytes
				对应 entries in object dictionary
		SDO, 	经过确认的服务
				用来 访问 entries of object dictionary (od)
				configuration for the requested behavior of the drive
				    apapted to the various possible applications
		IDO,
	通信架构
		PC(master)							Motor
			
		APP          		                APP
		||	  
		communication profile 301			communication profile 301
		
		<========================CAN  ========>
		
		
		PC(master)							Motor
			
		Drive Profile 402       		    modes of operation
		||	  		  						||
		communication profile 301			communication profile 301
		<========================CAN  ========>

		设备控制：
				起、停等命令由 state machine 执行
		操作的模式：定义了 驱动器的 行为。定义的模式如下：
		    hm( homing mode ): 自动归位模式									=>
				功能：find a home position(reference point, zero point)
			ppm (profile position mode): 概要位置模式						=> Position Control Loop
				功能： 限制 速度(信息)、位置(信息)、加速(信息）
					   使用 轨迹生成器 得到 moves 的 概要 也是可能的。
			ipm (interpolated position mode) 插入位置模式					=>
			
		    pvm (profile velocity mode): 概要速度模式		=> Control Loop (Velocity)
				功能：控制 驱动器 的速度( 不考虑位置 )	
				      提供 限定功能 和 轨迹生成。
		    ptm (profile toruqe mode) 力矩控制 （所有相关的参数都描述了)
															=> Control Loop (Torque)
			vm (velocity mode）速度模式						=> Control Loop (Velocity)

        轨迹生成器（Trajectory generator)
			输入  =>  TG  =>  control loop(s) with the demand values
		控制环：
			特点: highly manufacturer specific
				  可以是open或者closed
				  
== 操作原则
      运动控制器						=> drive units =>		CAN bus
	  (如 车轴控制器, axle controllers)

	  the profile approach for device specification 的两个原则上的优势：
	      system integration (系统集成)
		  device standardization (设备标准化)
		  	  a standardized device decouples a system integrator from a specific supplier.
			  				 	系统集成商 ==依赖==> 特定供应商(CompanyA X, A公司的X设备)
								
								系统集成商 ==依赖==> 标准设备(AX/BX/CX...)
			  device manufacturer are not forced to implement private protocols
			  		 设备制造商不必 被迫 实现 不同用户的 private protocols
	  
	  mandatory device characteristics
	  optional device features
	  leaving 'hooks' for manufacturer specific functionality

	  od (对象字典)
	    device profile中最重要的是 object dictionary description.(对象字典描述)

		od是 预先定义好顺序的 一组对象。
			 地址是 16-bit, 所以od中最多可以包含 65536 个 条目。
			 standardized device profile:  0x6000 - 0x9FFF

			 The drives profile (驱动的概要定义文件)
			 	 uses entries from 0x6000 - 0x9ffff to describe
				 	  the drive parameters and the drive functionality.
					  	  		参数	   	         	 功能

			multi 车轴(axles) 设备
				  6000 - 67ff	; axle 0, 4K个
				  6800 - 6fff	; axle 1,
				  7000 - 77ff	; exle 2,
				  7800 - 7fff	; exle 3
				  8000 - 87ff	; exle 4
				  8800 - 8fff	; exle 5	
				  9000 - 97ff	; exle 6
				  9800 - 9fff	; exle 7
				  
== Emergency messages 紧急消息
     由内部错误引起，
	 分配了最高优先级 以保证 它们能无延时地访问 总线。

	 有一个错误字段（包含 pre-defined error codes 和 额外信息)
	     error code: xx00 - xx7f
		 	   		 xx80 - xxff 保留
	 	 0000	No error
		 1000   Generic error
		 
		 2000 	Current 电流
		 2200 	Internel current 内部电流
		 2300	Current on device output side 输出端电流
		 3000	Voltage 电压
		 4000	Temperature 温度
		 
		 5000	Device hardware
		 6000	Deivce software
		 
		 7000	Additional modules
		 8000	Monitoring 监视信息
		 9000	Exernal error
		 F000	Additional functions
		 
== Predefinitions
     0x1000 - 0x1fff	;; not defined by the communication profile

	 
     0x1000  ;; the object at index 0x1000h		描述设备的类型和功能。

	 对于多设备模块， 额外信息参数部分会包含 0x0FFF
	                 object 0x1000 关联的 device profile number 是
					 		the device profile of the first device in the od.
					 其他设备确认他们的 profiles at
					 	 object 0x67ff + x*0x800  ;; x = 0-7
    					 		  6fff 	 		  ;; 1
								  77ff			  ;; 2
								  7fff			  ;; 3
								  87ff			  ;; 4
								  8fff			  ;; 5
								  97ff			  ;; 6
								  9fff			  ;; 7
							
	 	 67ff +
		 
== Object dictionary
     drives 共享  od entries 0x6000 - 0x63ff.
	 		这些 entries 对所有 drives 都一样。
	 drives 拥有 digital 或者 analog I/O 的 还使用 od entries from 8000 - 83FF

== common entries
   	 => Motor dta
     6402-64ff		;; serve as a database for motor parameters.
     				   用来维护一个服务数据库
	 => Drive data
	 6500-65ff		;; database for drive parameters

	 => od entries
	 
	 	P34
					   

## Cia SA 301 CANopen
